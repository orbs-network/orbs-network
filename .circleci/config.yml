version: 2
jobs:
  tests:
    docker:
      - image: circleci/golang:1.12.9
    resource_class: large
    steps:
      - checkout
      - run: ./.circleci/retry.sh 5 go get -u github.com/orbs-network/go-junit-report
      - run:
          command: ./test.sh
          no_output_timeout: 15m
      - store_artifacts:
          path: _out
          destination: test-output
      - store_artifacts:
          path: _reports
          destination: test-results
      - store_test_results:
          path: _reports

  races:
    docker:
      - image: circleci/golang:1.12.9
    resource_class: large
    steps:
      - checkout
      - run: ./.circleci/retry.sh 5 go get -u github.com/orbs-network/go-junit-report
      - run:
          command: ./test.races.sh
          no_output_timeout: 25m
      - store_artifacts:
          path: _out
          destination: test-output
      - store_artifacts:
          path: /go/src/github.com/orbs-network/orbs-network-go/_reports
          destination: test-results
      - store_test_results:
          path: _reports

  memory_leaks:
    docker:
      - image: circleci/golang:1.12.9
    resource_class: xlarge
    steps:
      - checkout
      - run: ./.circleci/retry.sh 5 go get -u github.com/orbs-network/go-junit-report
      - run: ./test.goroutine-leaks.sh
      - run: ./test.memory-leaks.sh

  flakiness:
    docker:
      - image: itamararjuan/golang_with_node_aws
    parallelism: 6
    resource_class: xlarge
    steps:
      - checkout
      - run: ./.circleci/retry.sh 5 go get -u github.com/orbs-network/go-junit-report
      - run:
          command: ./test.flakiness.sh
          no_output_timeout: 25m
      - store_artifacts:
          path: _out
          destination: test-output
      - store_artifacts:
          path: /go/src/github.com/orbs-network/orbs-network-go/_reports
          destination: test-results
      - store_test_results:
          path: _reports

  nightly:
    docker:
      - image: circleci/golang:1.12.9
    parallelism: 6
    resource_class: xlarge
    steps:
      - checkout
      - run:
          command: ./.circleci/nightly.sh
          no_output_timeout: 300m
      - store_artifacts:
          path: _out
          destination: test-output
      - store_artifacts:
          path: /go/src/github.com/orbs-network/orbs-network-go/_reports
          destination: test-results
      - store_test_results:
          path: _reports

  node_docker_build:
    machine:
      image: ubuntu-1604:201903-01
      docker_layer_caching: true
    steps:
      - checkout
      - run: ./docker/build/build-docker-node.sh
      - run: ./.circleci/release-node-to-ecr.sh

  gamma_docker_build:
    machine:
      image: ubuntu-1604:201903-01
      docker_layer_caching: true
    steps:
      - checkout
      - run: ./docker/build/build-docker-gamma.sh
      - run: ./.circleci/release-gamma-to-ecr.sh

  node_e2e:
    machine:
      image: ubuntu-1604:201903-01
      docker_layer_caching: true
    steps:
      - checkout
      - run: ./.circleci/install-go.sh
      - run: ./.circleci/install-node.sh #TODO is this really needed?
      - run: ./.circleci/retry.sh 5 go get github.com/orbs-network/go-junit-report
      - run: ./.circleci/install-docker-compose.sh
      - run: ./docker/test/import-node-ecr.sh
      # Logs here belong to root
      - run: sudo rm -rf _logs
      - run:
          command: ./docker/test/test.sh
          name: "Docker test with Lean Helix Consensus"
          environment:
            CONSENSUSALGO: leanhelix
      - store_test_results:
          path: _reports
      - store_artifacts:
          path: _logs
      - store_artifacts:
          path: _out

  gamma_e2e: #TODO dedup common steps with node_e2e
    machine:
      image: ubuntu-1604:201903-01
      docker_layer_caching: true
    steps:
      - checkout
      - run: ./.circleci/install-go.sh
      - run: ./.circleci/install-node.sh #TODO is this really needed?
      - run: ./.circleci/retry.sh 5 go get github.com/orbs-network/go-junit-report
      - run: ./.circleci/install-docker-compose.sh
      - run: ./docker/test/import-gamma-ecr.sh
      - run: ./docker/test/gamma-e2e.sh
      - store_test_results:
          path: _reports
      - store_artifacts:
          path: _out

  marvin_tests:
    docker:
      - image: itamararjuan/golang_with_node_aws
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - run: ./.circleci/marvin-endurance.sh # Its output is workspace/job_id file
      - persist_to_workspace:
          root: workspace
          paths:
            - job_id

  marvin_analysis:
    docker:
      - image: itamararjuan/golang_with_node_aws
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - run: ./.circleci/marvin-analyze.sh
      - persist_to_workspace:
          root: workspace
          paths:
            - analysis_results.json

  marvin_reporter:
    docker:
      - image: itamararjuan/golang_with_node_aws
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - run: echo "report results to github if branch != master"
      - run: echo "report results to slack"
      - run: ./.circleci/marvin-reporter.sh workspace/analysis_results.json

  ganache_related_tests:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - run: ./.circleci/install-go.sh
      - run: ./.circleci/retry.sh 5 go get github.com/orbs-network/go-junit-report
      - run: ./docker/test/ganache-related-test.sh
      - store_artifacts:
          path: _out
          destination: test-output
      - store_test_results:
          path: _reports

  e2e_testnet:
    docker:
      - image: circleci/golang:1.12.9
    environment:
      BOOTSTRAP_URL: "https://boyar-testnet-bootstrap.s3-us-west-2.amazonaws.com/boyar/config.json"
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - run: ./.circleci/retry.sh 5 go get -u github.com/orbs-network/go-junit-report
      - run: ./.circleci/e2e-testnet.sh
      - store_artifacts:
          path: _out
          destination: test-output
      - store_test_results:
          path: _reports
      - store_artifacts:
          path: _out

  success:
    docker:
      - image: circleci/golang:1.12.9
    steps:
      - run: echo "We have passed all required steps and are mergeable!"

  deploy_testnet:
    docker:
      - image: itamararjuan/golang_with_node_aws
    environment:
      BOOTSTRAP_URL: "https://boyar-testnet-bootstrap.s3-us-west-2.amazonaws.com/boyar/config.json"
      BOOTSTRAP_S3_URI: "s3://boyar-testnet-bootstrap/boyar/config.json"
      TESTNET_NODE_IP: "35.161.123.97"
      TESTNET_IGNORE_IPS: ""
    steps:
      - checkout
      - run: ./.circleci/set-aws-credentials.sh
      - run: ./.circleci/deploy-testnet.sh
      - persist_to_workspace:
          root: workspace
          paths:
            - app_chain_id
            - testnet_ip

  release_ga:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - run: ./.circleci/release.sh

  deploy_audit_node:
    docker:
      - image: itamararjuan/golang_with_node_aws
    steps:
      - checkout
      - run:
          name: "Deploy Audit Node"
          command: ./.circleci/deploy-audit-node.sh
          no_output_timeout: 45m

workflows:
  version: 2
  build: #TODO consider splitting into separate workflows: PR, merge to master, tagged release
    jobs:
      - tests:
          filters:
            tags:
              only: /^v.*/
      - races:
          filters:
            tags:
              only: /^v.*/
      - memory_leaks:
          filters:
            tags:
              only: /^v.*/
      - node_docker_build:
          filters:
            tags:
              only: /^v.*/
      - gamma_docker_build:
          filters:
            tags:
              only: /^v.*/
      - node_e2e:
          requires:
            - node_docker_build
          filters:
            tags:
              only: /^v.*/
      - gamma_e2e:
          requires:
            - gamma_docker_build
          filters:
            tags:
              only: /^v.*/
      - flakiness:
          filters:
            tags:
              only: /^v.*/
      - ganache_related_tests:
          filters:
            tags:
              only: /^v.*/
      - deploy_testnet:
          requires:
            - node_docker_build
            - tests # no point in deploying to testnet if one of the fast tests has failed
          filters:
            tags:
              only: /^v.*/
      - e2e_testnet:
          requires:
            - deploy_testnet
          filters:
            tags:
              only: /^v.*/
      - marvin_tests:
          requires:
           - e2e_testnet
           - deploy_testnet
      - marvin_analysis:
          requires:
            - marvin_tests
      - marvin_reporter:
          requires:
            - marvin_analysis
      - success:
          requires:
            - gamma_e2e
            - node_e2e
            - marvin_analysis
            - tests
            - ganache_related_tests
            - races
            - flakiness
            - memory_leaks
      - release_ga:
          requires:
            - success
          filters:
            tags:
              only: /^v.*/
            branches:
              only: master
      - deploy_audit_node:
          requires:
            - release_ga
          filters:
            tags:
              only: /^v.*/
            branches:
              only: master

  nightly:
    triggers:
      - schedule:
          cron: "0 23 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - nightly
